name: Create Release

on:
  push:
    tags:
    - 'v*'
    - 'ci-test*'


jobs:
  make_bin:
    name: Build Linux AMD64, ARM, AARCH64 Binaries
    runs-on: ubuntu-latest
    container: clux/muslrust:stable
    steps:
       - name: Checkout code
         uses: actions/checkout@v2
       - name: Pre-build
         run: |
          apt-get update && apt-get install -y gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
          rustup install stable
          rustup default stable
          rustup target add aarch64-unknown-linux-musl
          rustup target add arm-unknown-linux-musleabihf
          mkdir -p ~/.cargo
       - uses: actions/checkout@v2
       - name: Build Linux AMD64 Binary
         run: |
          HOME=/root cargo build --target x86_64-unknown-linux-musl --release
          strip target/x86_64-unknown-linux-musl/release/sway-colord
       - name: Upload AMD64 Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-amd64
           path: ./target/x86_64-unknown-linux-musl/release/sway-colord
       - name: Build Linux ARM Binary
         run: |
          export HOME=/root
          cat >> ~/.cargo/config <EOF
          [target.arm-unknown-linux-musleabihf]
          linker = "arm-linux-gnueabihf-gcc"
          EOF

          cargo build --target arm-unknown-linux-musleabihf --release
          arm-linux-gnueabihf-strip target/arm-unknown-linux-musleabihf/release/sway-colord
       - name: Upload Linux ARM Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-armhf
           path: ./target/arm-unknown-linux-musleabihf/release/sway-colord 
       - name: Build Linux AARCH64 Binary
         run: |
          export HOME=/root
          cat >> ~/.cargo/config <EOF
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-gnu-gcc"
          rustflags = [ "-C", "target-feature=+crt-static", "-C", "link-arg=-lgcc" ]
          EOF

          cargo build --target aarch64-unknown-linux-musl --release
          aarch64-linux-gnu-strip target/aarch64-unknown-linux-musl/release/sway-colord
       - name: Upload Linux ARM  Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-aarch64
           path: ./target/aarch64-unknown-linux-musl/release/sway-colord
  make_alpine:
    name: Make Alpine Linux package
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - uses: actions/checkout@v2
      - name: Prebuild
        id: apk
        run: |
          apk add alpine-sdk
          adduser -D -G abuild build
      - uses: actions/checkout@v2
      - name: Build apk
        run: |
          export VERSION="${GITHUB_REF:10}"
          sed -i 's/pkgver=.*$/pkgver="'${VERSION:1}'"/g' dist/alpine/APKBUILD
          wget "https://github.com/Th3Whit3Wolf/sway-colord/archive/${VERSION}.tar.gz"
          mv $VERSION.tar.gz sway-colord-${VERSION:1}.tar.gz
          shasum=$(sha512sum sway-colord-${VERSION:1}.tar.gz)
          sed -i "s/sha512sums=.*$/sha512sums=\"${shasum}\"/g" dist/alpine/APKBUILD
          chmod 777 dist/alpine
          chmod 666 dist/alpine/APKBUILD
          cd dist/alpine
          su build -c "abuild-keygen -a -n && abuild -r"
          mv /home/build/packages/dist/x86_64/sway-colord-${VERSION:1}-r0.apk $GITHUB_WORKSPACE/sway-colord.apk
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: sway-colord.apk
          path: /sway-colord.apk
  make_arch:
      name: Make Arch Linux package
      runs-on: ubuntu-latest
      container:
        image: archlinux
        options: --privileged
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup
      steps:
        - uses: actions/checkout@v2
        - name: Build Arch Linux package
          uses: house-of-vanity/build-arch-package@master
          with:
            PKGBUILD: $GITHUB_WORKSPACE/dist/arch/PKGBUILD
            OUTDIR: $HOME/arch-packages
        - run: mv $HOME/arch-packages/*pkg.tar.zst sway-colord-x86_64.pkg.tar.zst
        - name: Upload Arch Package
          uses: actions/upload-artifact@v1
          with:
            name: arch_linux_sway-colord-x86_64.pkg.tar.zst
            path: ./sway-colord-x86_64.pkg.tar.zst
  make_deb:
    name: Make Deb package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Pre-build
        run: sudo apt install -y libfuse-dev pkg-config && cargo install cargo-deb
      - uses: actions/checkout@v2
      - name: Build deb
        run: cargo deb --output ./target/debian/sway-colord_amd64.deb
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: sway-colord_amd64.deb
          path: ./target/debian/sway-colord_amd64.deb
  make_ebuild:
    name: Make Gentoo Ebuild package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Copy Ebuild
        run: mv dist/gentoo/sway-colord.ebuild $GITHUB_WORKSPACE/sway-colord.ebuild
      - name: Upload Arch Package
        uses: actions/upload-artifact@v1
        with:
          name: sway-colord.ebuild
          path: ./sway-colord.ebuild
  make_rpm:
    name: Make RHEL package
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Pre-build
       run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- \
          --default-toolchain stable --profile minimal -y
          source $HOME/.cargo/env
          dnf install gcc rpmdevtools -y
          cargo install cargo-rpm
     - uses: actions/checkout@v2
     - name: Build rpm
       run: |
         cargo build --release
         cargo rpm build -v
         cp target/release/rpmbuild/RPMS/x86_64/sway-colord-*.x86_64.rpm $GITHUB_WORKSPACE/sway-colord.x86_64.rpm          
     - name: Upload binary
       uses: actions/upload-artifact@v1
       with:
          name: sway-colord.x86_64.rpm
          path: ./sway-colord.x86_64.rpm      
      
  publish:
    name: Publish release
    needs: [make_bin, make_alpine, make_arch, make_deb,make_ebuild, make_rpm]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version (git tag)
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=FULL_TAG::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Download Linux AMD64 Binary
        uses: actions/download-artifact@v1
        with:
          name: sway-colord-linux-amd64
          path: ./
      - name: Download Linux ARM Binary
        uses: actions/download-artifact@v1
        with:
          name: sway-colord-linux-armhf
          path: ./
      - name: Download AARCH64 Binary
        uses: actions/download-artifact@v1
        with:
          name: sway-colord-linux-aarch64
          path: ./
      - name: Download Alpine Package
        uses: actions/download-artifact@v1
        with:
          name: sway-colord.apk
          path: ./
      - name: Download Arch Package
        uses: actions/download-artifact@v1
        with:
          name: arch_linux_sway-colord-x86_64.pkg.tar.zst
          path: ./
      - name: Download Deb Package
        uses: actions/download-artifact@v1
        with:
          name: sway-colord_amd64.deb
          path: ./
      - name: Download Gento Ebuild
        uses: actions/download-artifact@v1
        with:
          name: sway-colord.ebuild
          path: ./
      - name: Download RHEL Package
        uses: actions/download-artifact@v1
        with:
          name: sway-colord.x86_64.rpm
          path: ./
      - name: Upload binary assets
        run: |
           wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2
           tar xjf linux-amd64-github-release.tar.bz2
           export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
  
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-x86_64.apk    --file ./sway-colord.apk
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord_${{ steps.get_version.outputs.VERSION }}_amd64.deb     --file ./sway-colord_amd64.deb
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-x86_64.ebuild --file ./sway-colord.ebuild
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-x86_64.rpm    --file ./sway-colord.x86_64.rpm
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-linux-amd64   --file ./sway-colord-linux-amd64
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-linux-armhf   --file ./sway-colord-linux-armhf
           ./bin/linux/amd64/github-release upload -u Th3Whit3Wolf -r sway-colord --tag ${{ steps.get_version.outputs.FULL_TAG }} --name sway-colord-${{ steps.get_version.outputs.VERSION }}-linux-aarch64 --file ./sway-colord-linux-aarch64
