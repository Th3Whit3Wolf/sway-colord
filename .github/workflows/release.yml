name: Create Release

on:
  push:
    tags:
    - 'v*'
    - 'ci-test*'


jobs:
  make_bin:
    name: Build Linux AMD64, ARM, AARCH64 Binaries
    runs-on: ubuntu-latest
    container: clux/muslrust:stable
    steps:
       - name: Checkout code
         uses: actions/checkout@v2
       - name: Pre-build
         run: |
          apt-get update && apt-get install -y gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-musl
          rustup target add arm-unknown-linux-musleabihf
          mkdir -p ~/.cargo
       - name: Build Linux AMD64 Binary
         run: |
          HOME=/root cargo build --target x86_64-unknown-linux-musl --release
          strip target/x86_64-unknown-linux-musl/release/sway-colord
       - name: Upload AMD64 Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-amd64
           path: ./target/x86_64-unknown-linux-musl/release/sway-colord
       - name: Build Linux ARM Binary
         run: |
          export HOME=/root
          cat >> ~/.cargo/config <EOF
          [target.arm-unknown-linux-musleabihf]
          linker = "arm-linux-gnueabihf-gcc"
          EOF

          cargo build --target arm-unknown-linux-musleabihf --release
          arm-linux-gnueabihf-strip target/arm-unknown-linux-musleabihf/release/sway-colord
       - name: Upload Linux ARM Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-armhf
           path: ./target/arm-unknown-linux-musleabihf/release/sway-colord 
       - name: Build Linux AARCH64 Binary
         run: |
          export HOME=/root
          cat >> ~/.cargo/config <EOF
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-gnu-gcc"
          rustflags = [ "-C", "target-feature=+crt-static", "-C", "link-arg=-lgcc" ]
          EOF

          cargo build --target aarch64-unknown-linux-musl --release
          aarch64-linux-gnu-strip target/aarch64-unknown-linux-musl/release/sway-colord
       - name: Upload Linux ARM  Binary
         uses: actions/upload-artifact@v1
         with:
           name: sway-colord-linux-aarch64
           path: ./target/aarch64-unknown-linux-musl/release/sway-colord
  make_alpine:
    name: Make Alpine Linux package
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - uses: actions/checkout@v2
      - name: Prebuild
        id: apk
        run: |
          export VERSION="${GITHUB_REF:10}"
          echo "::set-output name=version::${VERSION:1}"
          apk add alpine-sdk
          adduser -D -G abuild build
      - uses: actions/checkout@v2
      - name: Build apk
        run: |
          sway-colord-${{ steps.apk.outputs.version }}-r0.apk
          sed -i 's/pkgver=.*$/pkgver="'${{ steps.apk.outputs.version }}'"/g' dist/alpine/APKBUILD
          shasum=$(sha512sum sway-colord.tar.gz)
          sed -i "s/sha512sums=.*$/sha512sums=\"${shasum}\"/g" dist/alpine/APKBUILD
          chmod 777 dist/alpine
          chmod 666 dist/alpine/APKBUILD
          cd dist/alpine
          su build -c "abuild-keygen -a -n && abuild -r"
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: sway-colord.apk
          path: /home/build/packages/dist/x86_64/sway-colord-${{ steps.apk.outputs.version }}-r0.apk
  make_arch:
      name: Make Arch Linux package
      runs-on: ubuntu-latest
      container:
        image: archlinux
        options: --privileged
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup
      steps:
        - uses: actions/checkout@v2
        - name: Build Arch Linux package
          uses: house-of-vanity/build-arch-package@master
          with:
            PKGBUILD: $GITHUB_WORKSPACE/.github/workflows/PKGBUILD
            OUTDIR: $HOME/arch-packages
        - run: mv $HOME/arch-packages/*pkg.tar.zst sway-colord-x86_64.pkg.tar.zst
        - name: Upload Arch Package
          uses: actions/upload-artifact@v1
          with:
            name: arch_linux_sway-colord-x86_64.pkg.tar.zst
            path: ./sway-colord-x86_64.pkg.tar.zst
  make_deb:
    name: Make Deb package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Pre-build
        run: sudo apt install -y libfuse-dev pkg-config && cargo install cargo-deb
      - uses: actions/checkout@v2
      - name: Build deb
        run: cargo deb --output ./target/debian/sway-colord_amd64.deb
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: sway-colord_amd64.deb
          path: ./target/debian/sway-colord_amd64.deb
  